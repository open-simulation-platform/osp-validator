//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.04.27 at 03:29:35 PM CEST 
//


package com.opensimulationplatform.modeldescription.xml.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.opensimulationplatform.modeldescription.xml.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _OspModelDescription_QNAME = new QName("https://open-simulation-platform.com/OspModelDescription/1.0.0", "OspModelDescription");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.opensimulationplatform.modeldescription.xml.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Fmi2Unit }
     * 
     */
    public Fmi2Unit createFmi2Unit() {
        return new Fmi2Unit();
    }

    /**
     * Create an instance of {@link OspModelDescriptionType }
     * 
     */
    public OspModelDescriptionType createOspModelDescriptionType() {
        return new OspModelDescriptionType();
    }

    /**
     * Create an instance of {@link AngularMechanicalQuasiPortType }
     * 
     */
    public AngularMechanicalQuasiPortType createAngularMechanicalQuasiPortType() {
        return new AngularMechanicalQuasiPortType();
    }

    /**
     * Create an instance of {@link NmeaTrueHeadingType }
     * 
     */
    public NmeaTrueHeadingType createNmeaTrueHeadingType() {
        return new NmeaTrueHeadingType();
    }

    /**
     * Create an instance of {@link ShaftSpeedType }
     * 
     */
    public ShaftSpeedType createShaftSpeedType() {
        return new ShaftSpeedType();
    }

    /**
     * Create an instance of {@link AzimuthAngleType }
     * 
     */
    public AzimuthAngleType createAzimuthAngleType() {
        return new AzimuthAngleType();
    }

    /**
     * Create an instance of {@link ElectricPowerType }
     * 
     */
    public ElectricPowerType createElectricPowerType() {
        return new ElectricPowerType();
    }

    /**
     * Create an instance of {@link HydraulicQuasiPortType }
     * 
     */
    public HydraulicQuasiPortType createHydraulicQuasiPortType() {
        return new HydraulicQuasiPortType();
    }

    /**
     * Create an instance of {@link TorqueType }
     * 
     */
    public TorqueType createTorqueType() {
        return new TorqueType();
    }

    /**
     * Create an instance of {@link PressureType }
     * 
     */
    public PressureType createPressureType() {
        return new PressureType();
    }

    /**
     * Create an instance of {@link NmeaGgaLatitudeLongitudeType }
     * 
     */
    public NmeaGgaLatitudeLongitudeType createNmeaGgaLatitudeLongitudeType() {
        return new NmeaGgaLatitudeLongitudeType();
    }

    /**
     * Create an instance of {@link ElectromagneticPortType }
     * 
     */
    public ElectromagneticPortType createElectromagneticPortType() {
        return new ElectromagneticPortType();
    }

    /**
     * Create an instance of {@link LinearDisplacementType }
     * 
     */
    public LinearDisplacementType createLinearDisplacementType() {
        return new LinearDisplacementType();
    }

    /**
     * Create an instance of {@link LinearMechanicalPortType }
     * 
     */
    public LinearMechanicalPortType createLinearMechanicalPortType() {
        return new LinearMechanicalPortType();
    }

    /**
     * Create an instance of {@link VariableGroupsType }
     * 
     */
    public VariableGroupsType createVariableGroupsType() {
        return new VariableGroupsType();
    }

    /**
     * Create an instance of {@link UnitType }
     * 
     */
    public UnitType createUnitType() {
        return new UnitType();
    }

    /**
     * Create an instance of {@link NmeaMwvType }
     * 
     */
    public NmeaMwvType createNmeaMwvType() {
        return new NmeaMwvType();
    }

    /**
     * Create an instance of {@link LinearMechanicalQuasiPortType }
     * 
     */
    public LinearMechanicalQuasiPortType createLinearMechanicalQuasiPortType() {
        return new LinearMechanicalQuasiPortType();
    }

    /**
     * Create an instance of {@link BatteryFeedbackType }
     * 
     */
    public BatteryFeedbackType createBatteryFeedbackType() {
        return new BatteryFeedbackType();
    }

    /**
     * Create an instance of {@link NmeaGstRmsType }
     * 
     */
    public NmeaGstRmsType createNmeaGstRmsType() {
        return new NmeaGstRmsType();
    }

    /**
     * Create an instance of {@link NmeaWindSpeedType }
     * 
     */
    public NmeaWindSpeedType createNmeaWindSpeedType() {
        return new NmeaWindSpeedType();
    }

    /**
     * Create an instance of {@link ForceType }
     * 
     */
    public ForceType createForceType() {
        return new ForceType();
    }

    /**
     * Create an instance of {@link AngularVelocityType }
     * 
     */
    public AngularVelocityType createAngularVelocityType() {
        return new AngularVelocityType();
    }

    /**
     * Create an instance of {@link AngularAccelerationType }
     * 
     */
    public AngularAccelerationType createAngularAccelerationType() {
        return new AngularAccelerationType();
    }

    /**
     * Create an instance of {@link NmeaSxnType }
     * 
     */
    public NmeaSxnType createNmeaSxnType() {
        return new NmeaSxnType();
    }

    /**
     * Create an instance of {@link UnitDefinitionsType }
     * 
     */
    public UnitDefinitionsType createUnitDefinitionsType() {
        return new UnitDefinitionsType();
    }

    /**
     * Create an instance of {@link NmeaWindDirectionType }
     * 
     */
    public NmeaWindDirectionType createNmeaWindDirectionType() {
        return new NmeaWindDirectionType();
    }

    /**
     * Create an instance of {@link VolumeFlowRateType }
     * 
     */
    public VolumeFlowRateType createVolumeFlowRateType() {
        return new VolumeFlowRateType();
    }

    /**
     * Create an instance of {@link FixedThrusterFeedbackType }
     * 
     */
    public FixedThrusterFeedbackType createFixedThrusterFeedbackType() {
        return new FixedThrusterFeedbackType();
    }

    /**
     * Create an instance of {@link NmeaGstType }
     * 
     */
    public NmeaGstType createNmeaGstType() {
        return new NmeaGstType();
    }

    /**
     * Create an instance of {@link NmeaGgaType }
     * 
     */
    public NmeaGgaType createNmeaGgaType() {
        return new NmeaGgaType();
    }

    /**
     * Create an instance of {@link AzimuthThrusterSetpointType }
     * 
     */
    public AzimuthThrusterSetpointType createAzimuthThrusterSetpointType() {
        return new AzimuthThrusterSetpointType();
    }

    /**
     * Create an instance of {@link AngularMechanicalPortType }
     * 
     */
    public AngularMechanicalPortType createAngularMechanicalPortType() {
        return new AngularMechanicalPortType();
    }

    /**
     * Create an instance of {@link FixedThrusterSetpointType }
     * 
     */
    public FixedThrusterSetpointType createFixedThrusterSetpointType() {
        return new FixedThrusterSetpointType();
    }

    /**
     * Create an instance of {@link AngularDisplacementType }
     * 
     */
    public AngularDisplacementType createAngularDisplacementType() {
        return new AngularDisplacementType();
    }

    /**
     * Create an instance of {@link ElectromagneticQuasiPortType }
     * 
     */
    public ElectromagneticQuasiPortType createElectromagneticQuasiPortType() {
        return new ElectromagneticQuasiPortType();
    }

    /**
     * Create an instance of {@link NmeaGstPositionErrorType }
     * 
     */
    public NmeaGstPositionErrorType createNmeaGstPositionErrorType() {
        return new NmeaGstPositionErrorType();
    }

    /**
     * Create an instance of {@link VoltageType }
     * 
     */
    public VoltageType createVoltageType() {
        return new VoltageType();
    }

    /**
     * Create an instance of {@link NmeaStatusType }
     * 
     */
    public NmeaStatusType createNmeaStatusType() {
        return new NmeaStatusType();
    }

    /**
     * Create an instance of {@link VolumeType }
     * 
     */
    public VolumeType createVolumeType() {
        return new VolumeType();
    }

    /**
     * Create an instance of {@link NmeaThsType }
     * 
     */
    public NmeaThsType createNmeaThsType() {
        return new NmeaThsType();
    }

    /**
     * Create an instance of {@link AzimuthThrusterFeedbackType }
     * 
     */
    public AzimuthThrusterFeedbackType createAzimuthThrusterFeedbackType() {
        return new AzimuthThrusterFeedbackType();
    }

    /**
     * Create an instance of {@link LinearAccelerationType }
     * 
     */
    public LinearAccelerationType createLinearAccelerationType() {
        return new LinearAccelerationType();
    }

    /**
     * Create an instance of {@link GenericType }
     * 
     */
    public GenericType createGenericType() {
        return new GenericType();
    }

    /**
     * Create an instance of {@link GeneratorFeedbackType }
     * 
     */
    public GeneratorFeedbackType createGeneratorFeedbackType() {
        return new GeneratorFeedbackType();
    }

    /**
     * Create an instance of {@link VariableType }
     * 
     */
    public VariableType createVariableType() {
        return new VariableType();
    }

    /**
     * Create an instance of {@link BusFeedbackType }
     * 
     */
    public BusFeedbackType createBusFeedbackType() {
        return new BusFeedbackType();
    }

    /**
     * Create an instance of {@link LinearVelocityType }
     * 
     */
    public LinearVelocityType createLinearVelocityType() {
        return new LinearVelocityType();
    }

    /**
     * Create an instance of {@link HydraulicPortType }
     * 
     */
    public HydraulicPortType createHydraulicPortType() {
        return new HydraulicPortType();
    }

    /**
     * Create an instance of {@link NmeaGgaFixType }
     * 
     */
    public NmeaGgaFixType createNmeaGgaFixType() {
        return new NmeaGgaFixType();
    }

    /**
     * Create an instance of {@link NmeaTimeType }
     * 
     */
    public NmeaTimeType createNmeaTimeType() {
        return new NmeaTimeType();
    }

    /**
     * Create an instance of {@link CurrentType }
     * 
     */
    public CurrentType createCurrentType() {
        return new CurrentType();
    }

    /**
     * Create an instance of {@link BladePitchType }
     * 
     */
    public BladePitchType createBladePitchType() {
        return new BladePitchType();
    }

    /**
     * Create an instance of {@link ChargeType }
     * 
     */
    public ChargeType createChargeType() {
        return new ChargeType();
    }

    /**
     * Create an instance of {@link FrequencyType }
     * 
     */
    public FrequencyType createFrequencyType() {
        return new FrequencyType();
    }

    /**
     * Create an instance of {@link NmeaGstEllipseType }
     * 
     */
    public NmeaGstEllipseType createNmeaGstEllipseType() {
        return new NmeaGstEllipseType();
    }

    /**
     * Create an instance of {@link Fmi2Unit.BaseUnit }
     * 
     */
    public Fmi2Unit.BaseUnit createFmi2UnitBaseUnit() {
        return new Fmi2Unit.BaseUnit();
    }

    /**
     * Create an instance of {@link Fmi2Unit.DisplayUnit }
     * 
     */
    public Fmi2Unit.DisplayUnit createFmi2UnitDisplayUnit() {
        return new Fmi2Unit.DisplayUnit();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OspModelDescriptionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "https://open-simulation-platform.com/OspModelDescription/1.0.0", name = "OspModelDescription")
    public JAXBElement<OspModelDescriptionType> createOspModelDescription(OspModelDescriptionType value) {
        return new JAXBElement<OspModelDescriptionType>(_OspModelDescription_QNAME, OspModelDescriptionType.class, null, value);
    }

}
